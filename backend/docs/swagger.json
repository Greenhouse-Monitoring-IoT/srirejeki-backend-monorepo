{
    "swagger": "2.0",
    "info": {
        "description": "This is an API documentation for SriRejeki IoT Greenhouse Monitoring",
        "title": "SriRejeki Backend API Documentation",
        "contact": {
            "name": "API Support",
            "email": "mail@hilmy.dev"
        },
        "version": "1.0"
    },
    "host": "localhost:80",
    "basePath": "/",
    "paths": {
        "/auth": {
            "get": {
                "description": "Get user session data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user session data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/request-reset-password": {
            "post": {
                "description": "Send request reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send request reset user password",
                "parameters": [
                    {
                        "description": "Phone number to send request reset password",
                        "name": "authRequestResetPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authRequestResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "patch": {
                "description": "Reset user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset user's password",
                "parameters": [
                    {
                        "description": "Required data to reset password",
                        "name": "authResetPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Sign in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Required sign in data",
                        "name": "authSignInRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "get": {
                "description": "Sign out using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Sign up an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up an account",
                "parameters": [
                    {
                        "description": "Required account data",
                        "name": "authSignUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify-request-reset-password": {
            "post": {
                "description": "Verify request reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify request reset password",
                "parameters": [
                    {
                        "description": "Required data to verify request reset password",
                        "name": "authVerificationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify-signup": {
            "post": {
                "description": "Verify signed up account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify signed up account",
                "parameters": [
                    {
                        "description": "Code to verify signed up account",
                        "name": "authVerificationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/auth.authResponse"
                        }
                    }
                }
            }
        },
        "/data/snapshot": {
            "get": {
                "description": "Get microcontroller snapshot data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Get microcontroller snapshot data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of microcontroller sensor",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "deviceId/clientId of the microcontroller",
                        "name": "deviceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Duration of snapshot data: hour | day | month. Default: month",
                        "name": "duration",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit of snapshot data. It must be string form of a number. Default: 30",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Post microcontroller snapshot data | INTERNAL USE ON BACKEND ONLY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Post microcontroller snapshot data | INTERNAL USE ON BACKEND ONLY",
                "parameters": [
                    {
                        "description": "Required data to post microcontroller snapshot data",
                        "name": "dataSnapshotPostRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.dataSnapshotPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    }
                }
            }
        },
        "/data/subscribe": {
            "get": {
                "description": "Get mqtt data in specified topic using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Data"
                ],
                "summary": "Get mqtt data in specified topic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Mqtt topic",
                        "name": "topic",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/data.dataResponse"
                        }
                    }
                }
            }
        },
        "/farmland": {
            "get": {
                "description": "Get one farmlands data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmland"
                ],
                "summary": "Get one farmlands data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farmland Id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new farmland data using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmland"
                ],
                "summary": "Add new farmland data",
                "parameters": [
                    {
                        "description": "Required data to add new farmland",
                        "name": "farmlandAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandAddRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete existing farmland data using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmland"
                ],
                "summary": "Delete existing farmland data",
                "parameters": [
                    {
                        "description": "Required data to delete existing farmland",
                        "name": "farmlandDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit existing farmland data using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmland"
                ],
                "summary": "Edit existing farmland data",
                "parameters": [
                    {
                        "description": "Required data to edit existing farmland",
                        "name": "farmlandEditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    }
                }
            }
        },
        "/farmland/user": {
            "get": {
                "description": "Get all user's farmlands data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farmland"
                ],
                "summary": "Get all user's farmlands data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/farmland.farmlandResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check application health",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Check application health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mcu": {
            "get": {
                "description": "Get one microcontroller data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Get one microcontroller data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Microcontroller Id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new microcontroller data using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Add new microcontroller data",
                "parameters": [
                    {
                        "description": "Required data to add new microcontroller",
                        "name": "microcontrollerAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerAddRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete existing microcontroller data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Delete existing microcontroller data",
                "parameters": [
                    {
                        "description": "Required data to delete existing microcontroller",
                        "name": "microcontrollerDeleteRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit existing microcontroller data using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Edit existing microcontroller data",
                "parameters": [
                    {
                        "description": "Required data to edit existing microcontroller",
                        "name": "microcontrollerEditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            }
        },
        "/mcu/auth": {
            "post": {
                "description": "Authenticate microcontroller | INTERNAL USE ON BACKEND ONLY",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Authenticate microcontroller | INTERNAL USE ON BACKEND ONLY",
                "parameters": [
                    {
                        "description": "Required data to authenticate microcontroller",
                        "name": "microcontrollerAuthRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            }
        },
        "/mcu/farmland": {
            "get": {
                "description": "Get all farmland's microcontrollers data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Get all farmland's microcontrollers data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Farmland Id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            }
        },
        "/mcu/send": {
            "post": {
                "description": "Send data to microcontroller using authorization bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Send data to microcontroller",
                "parameters": [
                    {
                        "description": "Required data to send data to microcontroller",
                        "name": "microcontrollerSendDataToMcuRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerSendDataToMcuRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            }
        },
        "/mcu/user": {
            "get": {
                "description": "Get all user's microcontrollers data using authorization bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microcontroller"
                ],
                "summary": "Get all user's microcontrollers data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/mcu.microcontrollerResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Check application metrics",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Info"
                ],
                "summary": "Check application metrics",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Get profile data using authorization Bearer header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get profile data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit profile data using authorization Bearer header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Edit profile data",
                "parameters": [
                    {
                        "description": "Required data to edit profile",
                        "name": "profileEditRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.profileEditRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/profile.profileResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.authRequestResetPasswordRequest": {
            "type": "object",
            "required": [
                "phonenumber"
            ],
            "properties": {
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "auth.authResetPasswordRequest": {
            "type": "object",
            "required": [
                "code",
                "phonenumber"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "auth.authResponse": {
            "type": "object",
            "properties": {
                "payload": {}
            }
        },
        "auth.authSignInRequest": {
            "type": "object",
            "required": [
                "password",
                "phonenumber"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "auth.authSignUpRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "phonenumber"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "auth.authVerificationRequest": {
            "type": "object",
            "required": [
                "code",
                "phonenumber"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "data.dataResponse": {
            "type": "object",
            "properties": {
                "payload": {}
            }
        },
        "data.dataSnapshotPostRequest": {
            "type": "object",
            "required": [
                "data",
                "deviceId",
                "durations",
                "type"
            ],
            "properties": {
                "data": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "durations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "farmland.farmlandAddRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "farmland.farmlandDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "farmland.farmlandEditRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "farmland.farmlandResponse": {
            "type": "object",
            "properties": {
                "payload": {}
            }
        },
        "mcu.microcontrollerAddRequest": {
            "type": "object",
            "required": [
                "deviceId",
                "farmlandId",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "farmlandId": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcu.microcontrollerAuthRequest": {
            "type": "object",
            "required": [
                "deviceId"
            ],
            "properties": {
                "deviceId": {
                    "type": "string"
                }
            }
        },
        "mcu.microcontrollerDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "mcu.microcontrollerEditRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "mcu.microcontrollerResponse": {
            "type": "object",
            "properties": {
                "payload": {}
            }
        },
        "mcu.microcontrollerSendDataToMcuRequest": {
            "type": "object",
            "required": [
                "data",
                "deviceId",
                "type"
            ],
            "properties": {
                "data": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "profile.profileEditRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phonenumber": {
                    "type": "string"
                }
            }
        },
        "profile.profileResponse": {
            "type": "object",
            "properties": {
                "payload": {}
            }
        }
    }
}